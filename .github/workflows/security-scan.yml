name: security-scan
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        shell: bash
        run: |
          set -euxo pipefail

          # Syft + Grype
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh  | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

          # Python deps
          python3 -m pip install --upgrade pip
          python3 -m pip install jinja2 bandit semgrep

          # Golang (reliable way to get gitleaks) + wkhtmltopdf for PDF export
          sudo apt-get update
          sudo apt-get install -y golang-go wkhtmltopdf

          # Gitleaks via Go (avoids changing asset names / 404s)
          go install github.com/gitleaks/gitleaks/v8@latest
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"

          # Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b /usr/local/bin

      - name: Verify tools on PATH (sanity check)
        shell: bash
        run: |
          set -eux
          syft --version
          grype --version
          gitleaks version
          trivy --version
          python3 --version
          semgrep --version || true
          bandit --version  || true

      - name: Run scans and build report
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force run_artifacts | Out-Null

          # SBOM + Grype
          ./run_all.ps1 -RepoPath ./ -VenvSite ""

          # Extra analyzers (don't fail job if a tool exits non-zero)
          if (Get-Command semgrep -ErrorAction SilentlyContinue) {
            & semgrep --config auto --json --output run_artifacts/semgrep.json . ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          }
          if (Get-Command bandit -ErrorAction SilentlyContinue) {
            & bandit -r . -f json -o run_artifacts/bandit.json ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          }
          if (Get-Command gitleaks -ErrorAction SilentlyContinue) {
            & gitleaks detect --source . -f json -r run_artifacts/gitleaks.json ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          }
          if (Get-Command trivy -ErrorAction SilentlyContinue) {
            & trivy config --format json --output run_artifacts/trivy_config.json . ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          }

          # Build HTML and PDF
          python3 make_report.py
          wkhtmltopdf run_artifacts/report.html run_artifacts/report.pdf

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: run_artifacts/*

name: security-scan
on: [push, pull_request]

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        shell: bash
        run: |
          set -euxo pipefail
          # Syft + Grype
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh  | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          # Python deps (user site) and expose ~/.local/bin on PATH
          python3 -m pip install --upgrade --user pip
          python3 -m pip install --user jinja2 bandit semgrep
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          # Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          # HTML → PDF
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf
          # Gitleaks via Docker
          docker --version
          docker pull zricethezav/gitleaks:latest

      - name: Run scans and build report
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force run_artifacts | Out-Null

          # Stub venv results so summary never fails when there’s no venv
          '{"matches":[]}' | Set-Content -Encoding utf8 run_artifacts/grype.venv.json

          # SBOM + repo vulnerability scan
          ./run_all.ps1 -RepoPath ./ -VenvSite ""

          # Extra analyzers (don’t fail job on findings/non-zero)
          python3 -m semgrep --config auto --json --output run_artifacts/semgrep.json . ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          python3 -m bandit  -r . -f json -o run_artifacts/bandit.json              ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          trivy config --format json --output run_artifacts/trivy_config.json .     ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }

          # Gitleaks (Docker) — ***single line***
          $workspace = "$env:GITHUB_WORKSPACE".Replace('\','/')
          docker run --rm -v "${workspace}:/repo" zricethezav/gitleaks:latest detect --source=/repo -f json -r /repo/run_artifacts/gitleaks.json

          # Minimal HTML report
          @'
          import json, os, datetime
          from jinja2 import Template
          ART="run_artifacts"
          def load(p):
              try:
                  with open(p,"r",encoding="utf-8") as f: return json.load(f)
              except Exception: return None
          data={
            "grype":load(os.path.join(ART,"grype.json")),
            "grype_venv":load(os.path.join(ART,"grype.venv.json")),
            "semgrep":load(os.path.join(ART,"semgrep.json")),
            "bandit":load(os.path.join(ART,"bandit.json")),
            "gitleaks":load(os.path.join(ART,"gitleaks.json")),
            "trivy":load(os.path.join(ART,"trivy_config.json")),
          }
          def grype_sum(o):
              if not o: return {"total":0,"by_sev":{}}
              s={}
              for m in o.get("matches",[]):
                  sev=(m.get("vulnerability") or {}).get("severity","Unknown")
                  s[sev]=s.get(sev,0)+1
              return {"total":len(o.get("matches",[])),"by_sev":s}
          def n(o,k): return len(o.get(k,[])) if o else 0
          def trivy_sum(o):
              if not o: return {"total":0}
              if isinstance(o.get("Results"),list):
                  return {"total": sum(len(r.get("Misconfigurations",[])) for r in o["Results"])}
              return {"total": len(o.get("Misconfigurations",[])) if "Misconfigurations" in o else o.get("Count",0)}
          summary={
            "generated": datetime.datetime.now().isoformat(timespec="seconds"),
            "grype": grype_sum(data["grype"]),
            "grype_venv": grype_sum(data["grype_venv"]),
            "semgrep_total": n(data["semgrep"], "results"),
            "bandit_total": n(data["bandit"], "results"),
            "gitleaks_total": len((data["gitleaks"] or {}).get("leaks",[])) if isinstance(data.get("gitleaks"),dict) else 0,
            "trivy": trivy_sum(data["trivy"]),
          }
          tpl=Template("""<!doctype html><meta charset='utf-8'><title>Security Scan Report</title>
          <style>body{font-family:system-ui,Segoe UI,Arial,sans-serif;margin:2rem}h1{margin:.2rem 0}h2{margin:1.2rem 0 .4rem}
          table{border-collapse:collapse;width:100%}th,td{border:1px solid #ddd;padding:.45rem .6rem;font-size:14px}th{background:#f5f5f5;text-align:left}
          .muted{color:#666;font-size:12px}</style>
          <h1>Security Scan Report</h1><div class="muted">Generated: {{generated}}</div>
          <h2>Grype (repo)</h2><table><tr><td>Total</td><td>{{grype.total}}</td></tr>
          <tr><td>By severity</td><td>{% for k,v in grype.by_sev.items() %}{{k}}={{v}}{{ ", " if not loop.last }}{% endfor %}</td></tr></table>
          <h2>Grype (venv)</h2><table><tr><td>Total</td><td>{{grype_venv.total}}</td></tr>
          <tr><td>By severity</td><td>{% for k,v in grype_venv.by_sev.items() %}{{k}}={{v}}{{ ", " if not loop.last }}{% endfor %}</td></tr></table>
          <h2>Semgrep</h2><table><tr><td>Total findings</td><td>{{semgrep_total}}</td></tr></table>
          <h2>Bandit</h2><table><tr><td>Total findings</td><td>{{bandit_total}}</td></tr></table>
          <h2>Gitleaks</h2><table><tr><td>Total leaks</td><td>{{gitleaks_total}}</td></tr></table>
          <h2>Trivy (IaC/config)</h2><table><tr><td>Total issues</td><td>{{trivy.total}}</td></tr></table>""")
          os.makedirs(ART,exist_ok=True)
          open(os.path.join(ART,"report.html"),"w",encoding="utf-8").write(tpl.render(**summary))
          print("Wrote run_artifacts/report.html")
          '@ | Set-Content -Encoding UTF8 make_report.py

          python3 make_report.py
          wkhtmltopdf run_artifacts/report.html run_artifacts/report.pdf

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: run_artifacts/*

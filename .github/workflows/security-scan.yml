name: security-scan
on: [push, pull_request]

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        shell: bash
        run: |
          set -euxo pipefail

          # Syft + Grype
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh  | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

          # Python deps for the HTML report
          python3 -m pip install --upgrade pip
          python3 -m pip install jinja2

          # --- Gitleaks (robust: pick the linux_x64 tarball from the release API)
          GL_URL=$(curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest \
                    | grep -oE 'https://[^"]+linux_x64\.tar\.gz')
          curl -sSL "$GL_URL" | sudo tar -xz -C /usr/local/bin gitleaks

          # Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b /usr/local/bin

          # HTML â†’ PDF
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf

      - name: Run scans and build report
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force run_artifacts | Out-Null

          # SBOM + Grype
          ./run_all.ps1 -RepoPath ./ -VenvSite ""

          # These tools may exit non-zero; don't fail the job for findings
          & semgrep --config auto --json --output run_artifacts/semgrep.json . ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          & bandit -r . -f json -o run_artifacts/bandit.json                     ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          & gitleaks detect --source . -f json -r run_artifacts/gitleaks.json    ; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }
          & trivy config --format json --output run_artifacts/trivy_config.json .; if ($LASTEXITCODE -ne 0) { $LASTEXITCODE = 0 }

          # Build HTML (cross-platform) and then PDF
          python3 make_report.py
          wkhtmltopdf run_artifacts/report.html run_artifacts/report.pdf

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: run_artifacts/*
